name: Release

on:
  push:
    tags: v*

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - run: echo "${{ steps.create_release.outputs.upload_url }}" > upload_url
      - name: Saving upload URL
        uses: actions/upload-artifact@v1
        with:
          name: upload_url
          path: upload_url
  build:
    name: Build Matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            filename: Spogit-Ubuntu
          - os: ubuntu-latest
            filename: Spogit-AOT
            extra: -k aot
          - os: windows-latest
            filename: Spogit-Windows.exe
          - os: macos-latest
            filename: Spogit-MacOS
    steps:
      - uses: actions/checkout@v2
      - uses: cedx/setup-dart@v2
      - run: echo ${{ matrix.os }}
      - name: Install Dependencies
        run: pub get
      - name: Compile Dart
        run: dart2native bin/main.dart -o ${{ matrix.filename }} ${{ matrix.extra }}
      - name: Saving upload URL
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.filename }}
          path: ${{ matrix.filename }}
      - name: Retrieving upload URL
        uses: actions/download-artifact@v1
        with:
          name: upload_url
      - name: Set the URL
        id: upload_url
        run: echo "::set-output name=upload_url::$(cat upload_url/upload_url)"
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload_url.outputs.upload_url }}
          asset_path: ./${{ matrix.filename }}
          asset_name: ${{ matrix.filename }}
          asset_content_type: application/octet-stream
